data binding sample


activity
```
class PlainOldActivitySolution3 : AppCompatActivity() {

    // Obtain ViewModel from ViewModelProviders
    private val viewModel by lazy { ViewModelProviders.of(this).get(SimpleViewModel::class.java) }
    private val viewModelSolution by lazy { ViewModelProviders.of(this).get(SimpleViewModelSolution::class.java) }
    private val testViewModel by lazy { ViewModelProviders.of(this).get(TestViewModel::class.java) }
    
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)

        val binding: PlainActivitySolution3Binding =
            DataBindingUtil.setContentView(this, R.layout.plain_activity_solution_3)

        binding.viewmodel = viewModel
        binding.viewModelSolution = viewModelSolution
        binding.testViewModel = testViewModel
        binding.lifecycleOwner = this
        binding.nameTest = "Likess"

    }
```

viewmodel
```
class TestViewModel : ViewModel() {

    var name = MutableLiveData<String>("mohammad")
    var family = MutableLiveData<String>("no3ratii")
    var likes = MutableLiveData<Int>(0)
    var conter = 0
    var color = Color.BLUE

    fun onClick(){
        likes.value = likes.value?.plus(1)
    }
}
```

xml
```
<?xml version="1.0" encoding="utf-8"?>

<layout xmlns:android="http://schemas.android.com/apk/res/android"
  xmlns:app="http://schemas.android.com/apk/res-auto"
  xmlns:tools="http://schemas.android.com/tools">

  <data>
    <variable
      name="testViewModel"
      type="com.example.android.databinding.basicsample.data.TestViewModel" />

    <variable
      name="nameTest"
      type="String" />
  </data>

  <androidx.constraintlayout.widget.ConstraintLayout
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <Button
      android:id="@+id/like_button"
      android:layout_width="wrap_content"
      android:layout_height="wrap_content"
      android:layout_marginEnd="16dp"
      android:layout_marginStart="16dp"
      android:layout_marginTop="16dp"
      android:textColor="@{testViewModel.color}"
      android:onClick="@{() -> testViewModel.onClick()}"
      android:text="@string/like"
      app:layout_constraintBottom_toTopOf="@+id/progressBar"
      app:layout_constraintEnd_toEndOf="@+id/imageView"
      app:layout_constraintStart_toStartOf="@+id/imageView"
      app:layout_constraintTop_toBottomOf="@+id/likes" />

    <ImageView
      android:id="@+id/imageView"
      app:colorTest="@{testViewModel.likes}"
      android:layout_width="wrap_content"
      android:layout_height="wrap_content"
      android:layout_marginEnd="24dp"
      android:layout_marginTop="24dp"
      android:contentDescription="@string/profile_avatar_cd"
      android:minHeight="48dp"
      android:minWidth="48dp"
      app:layout_constraintBottom_toTopOf="@+id/likes_label"
      app:layout_constraintEnd_toEndOf="parent"
      app:layout_constraintTop_toTopOf="parent"
      app:layout_constraintVertical_bias="0.0"
      app:layout_constraintVertical_chainStyle="packed" />

    <ProgressBar
      android:id="@+id/progressBar"
      app:max="@{100}"
      app:setProg="@{testViewModel.likes}"
      style="?android:attr/progressBarStyleHorizontal"
      android:layout_width="0dp"
      android:layout_height="wrap_content"
      android:layout_marginEnd="8dp"
      android:layout_marginStart="8dp"
      android:layout_marginTop="8dp"
      app:layout_constraintBottom_toBottomOf="parent"
      app:layout_constraintEnd_toEndOf="@+id/like_button"
      app:layout_constraintHorizontal_bias="0.5"
      app:layout_constraintStart_toStartOf="@+id/like_button"
      app:layout_constraintTop_toBottomOf="@+id/like_button"
      tools:progressBackgroundTint="@android:color/darker_gray" />

    <TextView
      android:id="@+id/likes"
      android:text="@{String.valueOf(testViewModel.likes) }"
      android:layout_width="wrap_content"
      android:layout_height="wrap_content"
      android:textAppearance="@style/TextAppearance.AppCompat.Title"
      app:layout_constraintBottom_toTopOf="@+id/like_button"
      app:layout_constraintEnd_toEndOf="@+id/likes_label"
      app:layout_constraintHorizontal_bias="0.5"
      app:layout_constraintStart_toStartOf="@+id/likes_label"
      app:layout_constraintTop_toBottomOf="@+id/likes_label" />

    <TextView
      android:id="@+id/plain_lastname"
      android:layout_width="0dp"
      android:layout_height="wrap_content"
      android:layout_marginEnd="128dp"
      android:layout_marginStart="16dp"
      android:layout_marginTop="8dp"
      android:text="@{testViewModel.family}"
      android:textAppearance="@style/TextAppearance.AppCompat.Large"
      app:layout_constraintEnd_toEndOf="parent"
      app:layout_constraintStart_toStartOf="parent"
      app:layout_constraintTop_toBottomOf="@+id/lastname_label" />

    <TextView
      android:id="@+id/name_label"
      android:layout_width="38dp"
      android:layout_height="wrap_content"
      android:layout_marginStart="16dp"
      android:layout_marginTop="8dp"
      android:text="@string/name_label"
      app:layout_constraintStart_toStartOf="parent"
      app:layout_constraintTop_toTopOf="parent" />

    <TextView
      android:id="@+id/lastname_label"
      android:layout_width="wrap_content"
      android:layout_height="wrap_content"
      android:layout_marginStart="16dp"
      android:layout_marginTop="8dp"
      android:text="@string/last_name_label"
      app:layout_constraintStart_toStartOf="parent"
      app:layout_constraintTop_toBottomOf="@+id/plain_name" />

    <TextView
      android:id="@+id/likes_label"
      android:layout_width="wrap_content"
      android:layout_height="wrap_content"
      android:layout_marginEnd="8dp"
      android:layout_marginStart="8dp"
      android:text="@{nameTest}"
      android:textAlignment="center"
      app:layout_constraintBottom_toTopOf="@+id/likes"
      app:layout_constraintEnd_toEndOf="@+id/imageView"
      app:layout_constraintHorizontal_bias="0.5"
      app:layout_constraintStart_toStartOf="@+id/imageView"
      app:layout_constraintTop_toBottomOf="@+id/imageView" />

    <TextView
      android:id="@+id/plain_name"
      android:layout_width="0dp"
      android:layout_height="wrap_content"
      android:layout_marginEnd="128dp"
      android:layout_marginStart="16dp"
      android:layout_marginTop="8dp"
      android:text="@{testViewModel.name}"
      android:textAppearance="@style/TextAppearance.AppCompat.Large"
      app:layout_constraintEnd_toEndOf="parent"
      app:layout_constraintStart_toStartOf="parent"
      app:layout_constraintTop_toBottomOf="@+id/name_label" />

    <EditText
      android:layout_width="0dp"
      android:layout_height="wrap_content"
      android:layout_marginEnd="128dp"
      android:layout_marginStart="16dp"
      android:layout_marginTop="15dp"
      android:text="@={testViewModel.name}"
      android:textAppearance="@style/TextAppearance.AppCompat.Large"
      app:layout_constraintEnd_toEndOf="parent"
      app:layout_constraintHorizontal_bias="0.0"
      app:layout_constraintStart_toStartOf="parent"
      app:layout_constraintTop_toBottomOf="@+id/plain_lastname" />


  </androidx.constraintlayout.widget.ConstraintLayout>
</layout>

```

bindingÂ  adapter
```
package com.example.android.databinding.basicsample.util

import android.content.Context
import android.content.res.ColorStateList
import android.graphics.drawable.Drawable
import android.os.Build
import android.view.View
import android.widget.ImageView
import android.widget.ProgressBar
import androidx.core.content.ContextCompat
import androidx.core.widget.ImageViewCompat
import androidx.databinding.BindingAdapter
import com.example.android.databinding.basicsample.R
import com.example.android.databinding.basicsample.data.Popularity

/**
 * A Binding Adapter that is called whenever the value of the attribute `app:popularityIcon`
 * changes. Receives a popularity level that determines the icon and tint color to use.
 */
@BindingAdapter("app:popularityIcon")
fun popularityIcon(view: ImageView, popularity: Popularity) {

    val color = getAssociatedColor(popularity, view.context)

    ImageViewCompat.setImageTintList(view, ColorStateList.valueOf(color))

    view.setImageDrawable(getDrawablePopularity(popularity, view.context))
}

@BindingAdapter(value = ["app:setProg" , "app:max"])
fun setProg(view: ProgressBar , value : Int , max: Int){
    view.progress = value * max / 5
}

@BindingAdapter("app:colorTest")
fun colorTest(view : ImageView , number : Int){
    view.setBackgroundColor(chengeColor(number, view.context))
    view.setImageResource(chengeImage(number))
}

fun chengeColor(number : Int , context: Context):Int{
    return when {
        number == 0 -> ContextCompat.getColor(context, R.color.colorAccent)
        number < 5 -> ContextCompat.getColor(context, R.color.colorPrimary)
        number < 10 -> ContextCompat.getColor(context, R.color.popular)
        else ->  ContextCompat.getColor(context, R.color.star)
    }
}

fun chengeImage(number : Int):Int{
    return when{
        number == 0 -> R.drawable.ic_launcher_background
        number < 5 -> R.drawable.ic_launcher_foreground
        number < 10 -> R.drawable.ic_whatshot_black_96dp
        else -> R.drawable.ic_person_black_96dp
    }
}
/**
 * A Binding Adapter that is called whenever the value of the attribute `android:progressTint`
 * changes. Depending on the value it determines the color of the progress bar.
 */
@BindingAdapter("app:progressTint")
fun tintPopularity(view: ProgressBar, popularity: Popularity) {

    val color = getAssociatedColor(popularity, view.context)

    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
        view.progressTintList = ColorStateList.valueOf(color)
    }
}

/**
 *  Sets the value of the progress bar so that 5 likes will fill it up.
 *
 *  Showcases Binding Adapters with multiple attributes. Note that this adapter is called
 *  whenever any of the attribute changes.
 */
@BindingAdapter(value = ["app:progressScaled", "android:max"], requireAll = true)
fun setProgress(progressBar: ProgressBar, likes: Int, max: Int) {
    progressBar.progress = (likes * max / 5).coerceAtMost(max)
}

/**
 * Unused Binding Adapter to replace the Binding Converter that hides a view if the number
 * of likes is zero.
 */
@BindingAdapter("app:hideIfZero")
fun hideIfZero(view: View, number: Int) {
    view.visibility = if (number == 0) View.GONE else View.VISIBLE
}

@BindingAdapter("app:test")
fun test(view: View, number: Int) {
    view.visibility = if (number == 0) View.GONE else View.VISIBLE
}


private fun getAssociatedColor(popularity: Popularity, context: Context): Int {
    return when (popularity) {
        Popularity.NORMAL -> context.theme.obtainStyledAttributes(
                intArrayOf(android.R.attr.colorForeground)
        ).getColor(0, 0x000000)
        Popularity.TEST -> ContextCompat.getColor(context, R.color.colorAccent)
        Popularity.POPULAR -> ContextCompat.getColor(context, R.color.popular)
        Popularity.STAR -> ContextCompat.getColor(context, R.color.star)
    }
}

private fun getDrawablePopularity(popularity: Popularity, context: Context): Drawable? {
    return when (popularity) {
        Popularity.TEST -> {
            ContextCompat.getDrawable(context, R.drawable.ic_launcher_background)
        }
        Popularity.NORMAL -> {
            ContextCompat.getDrawable(context, R.drawable.ic_person_black_96dp)
        }
        Popularity.POPULAR -> {
            ContextCompat.getDrawable(context, R.drawable.ic_whatshot_black_96dp)
        }
        Popularity.STAR -> {
            ContextCompat.getDrawable(context, R.drawable.ic_whatshot_black_96dp)
        }
    }
}

```
